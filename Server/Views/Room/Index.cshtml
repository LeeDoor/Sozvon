<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Video Conference - Чат</title>
    <link rel="stylesheet" href="~/css/chat.css">
</head>
<body>
    <div class="main-container">
        <div class="video-container">
            <div class="video-placeholder">
                <h2>Видеоконференция</h2>
                <p>Здесь будет отображаться видео участников</p>
            </div>
            <div class="video-controls">
                <button class="control-btn">🎥</button>
                <button class="control-btn">🎤</button>
                <button class="control-btn" style="background: #e74c3c;">📞</button>
            </div>
        </div>
        <div class="chat-container">
            <div class="chat-header">
                💬 Чат конференции
            </div>
            <div class="participants">
                Участников онлайн: <span id="participantCount">1</span>
            </div>
            <div id="chatroom"></div>
            <div class="input-container">
                <input type="text" id="message" placeholder="Введите сообщение..." />
                <button id="sendBtn" disabled>Отправить</button>
            </div>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.1/signalr.js"></script>
<script>
    const hubConnection = new signalR.HubConnectionBuilder()
        .withUrl("/chat")
        .build();
    function addMessage(userName, message, isOwn = false) {
        const messageElement = document.createElement("div");
        messageElement.className = `message ${isOwn ? 'sent' : 'received'}`;
        const userNameElement = document.createElement("b");
        userNameElement.textContent = `${userName}:`;
        const textElement = document.createTextNode(message);
        messageElement.appendChild(userNameElement);
        messageElement.appendChild(textElement);
        const chatroom = document.getElementById("chatroom");
        chatroom.appendChild(messageElement);
        chatroom.scrollTop = chatroom.scrollHeight;
    }
    document.getElementById("sendBtn").addEventListener("click", function () {
        const message = document.getElementById("message").value;
        if (!message.trim()) {
            alert("Пожалуйста, введите сообщение");
            return;
        }
        hubConnection.invoke("Send", message)
            .catch(function (err) {
                console.error(err.toString());
            });
        document.getElementById("message").value = '';
    });
    document.getElementById("message").addEventListener("keypress", function (e) {
        if (e.key === 'Enter') {
            document.getElementById("sendBtn").click();
        }
    });
    hubConnection.on("Receive", function (message, userName) {
        //const currentUserName = document.getElementById("userName").value; - Требуется подправить
        const currentUserName = NaN //Затычка
        const isOwnMessage = userName === currentUserName;
        
        addMessage(userName, message, isOwnMessage);
    });
    hubConnection.start()
        .then(function () {
            document.getElementById("sendBtn").disabled = false;
            addMessage("Система", "Добро пожаловать в чат конференции! Введите ваше имя и начинайте общение.");
        })
        .catch(function (err) {
            console.error(err.toString());
        });
</script>
</body>
</html>